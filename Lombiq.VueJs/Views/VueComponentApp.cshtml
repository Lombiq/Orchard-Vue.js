@using GraphQL
@using Lombiq.VueJs.Constants
@using Lombiq.VueJs.Models
@using OrchardCore.Mvc.Utilities
@{
    VueComponentApp shapeModel = Model.ShapeModel;

    var arguments = shapeModel
        .ViewModel
        .Properties()
        .Select(property => property.Name)
        .ToList();

    var vModel = string.Empty;
    if (arguments.Contains(shapeModel.ModelProperty))
    {
        vModel = $"v-model=\"{shapeModel.ModelProperty}\"";
        arguments.Remove(shapeModel.ModelProperty);
    }

    var attributes = string.Join(" ", arguments.Select(name => $":{name.HtmlClassify()}=\"{name.ToCamelCase()}\""));
}

<script type="importmap">
  @Json.Serialize(new { Imports = new Dictionary<string, string> { ["Vue"] = "https://unpkg.com/vue@3.4.15/dist/vue.esm-browser.js" } })
</script>

<div id="@shapeModel.Id"
     class="@shapeModel.Class lombiq-vue"
     data-name="@shapeModel.ComponentName"
     @Json.DataAttribute("model", shapeModel.ViewModel)>
    @Html.Raw($"<{shapeModel.ComponentName} {attributes} {vModel}></{shapeModel.ComponentName}>")
</div>

<script asp-name="@ResourceNames.VueComponentApp" depends-on="@shapeModel.ComponentName" type="module"></script>
